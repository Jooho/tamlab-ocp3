---

- name: Check if conf exist
  stat:
    path: "{{ dns_conf_path }}/{{ dns_conf_name }}.conf"
  register: conf_exist
  become: yes

- name: Clean exist DNS conf for OKD
  file:
    path: "{{ dns_conf_path }}/{{ dns_conf_name }}.conf"
    state: absent
  become: yes
  when:
  - conf_exist.stat.exists
  - rewrite_conf|bool

- name: Create DNS conf for OKD
  file:
    path: "{{ dns_conf_path }}/{{ dns_conf_name }}.conf"
    state: touch
  become: yes
  when:
  - (not conf_exist.stat.exists) or (rewrite_conf|bool)

- name: To load conf file
  command: cat "{{ dns_conf_path }}/{{ dns_conf_name }}.conf"
  register: conf_contents
  become: yes

- name: Add address record to dnsmasq
  lineinfile:
    path: "{{ dns_conf_path }}/{{ dns_conf_name }}.conf"
    line: |
       address=/{{ new_hostname }}/{{ new_ip }}
  become: yes
  when:
  - dns_ops == 'add'
  - new_hostname is defined
  - not conf_contents.stdout.find('address=/' + new_hostname +'/'+ new_ip) != -1
  notify:
  - restart dnsmasq

- name: Delete address record to dnsmasq
  lineinfile:
    path: "{{ dns_conf_path }}/{{ dns_conf_name }}.conf"
    line: |
       address=/{{ new_hostname }}/{{ new_ip }}
    state: absent
  become: yes
  when:
  - dns_ops == 'remove'
  - new_hostname is defined
  notify:
  - restart dnsmasq

- name: Add nameserver record to dnsmasq
  lineinfile:
    path: "{{ dns_conf_path }}/{{ dns_conf_name }}.conf"
    line: >
       server=/{{ new_ns_search_for }}/{{ new_ip }}
  become: yes
  when:
  - dns_ops == 'add'
  - new_ns_search_for is defined
  - not conf_contents.stdout.find('address=/' + new_ns_search_for +'/'+ new_ip) != -1
  notify:
  - restart dnsmasq

- name: Delete nameserver record to dnsmasq
  lineinfile:
    path: "{{ dns_conf_path }}/{{ dns_conf_name }}.conf"
    line: >
       server=/{{ new_ns_search_for }}/{{ new_ip }}
    state: absent
  become: yes
  when:
  - dns_ops == 'remove'
  - new_ns_search_for is defined
  notify:
  - restart dnsmasq
