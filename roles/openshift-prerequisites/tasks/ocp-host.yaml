---
- import_tasks: ./manage-repositories.yaml


# TO-DO
# will use redhat_repository module 
- name: Install the required rpms
  shell: yum install -y wget git yum-utils net-tools bind-utils iptables-services bridge-utils bash-completion kexec-tools sos psacct openshift-ansible atomic-openshift-excluder atomic-openshift-docker-excluder skopeo
  register: rpm_install
  async: 1800
  poll: 0

- name: Wait for Enable OpenShift repositories
  async_status: jid="{{ rpm_install.ansible_job_id }}"
  register: jobs
  until: jobs.finished
  retries: 180
  delay: 10


#- name: Install the required rpms
#  yum:
#    name: "{{ install_packages }}"
#    state: present
#  register: rpm_install
#  async: 1800
#  poll: 0
#
#- name: Wait for required packages
#  async_status: jid="{{ rpm_install.ansible_job_id }}"
#  register: jobs
#  until: jobs.finished
#  retries: 180
#  delay: 10

- name: Run openshift excluder
  command: atomic-openshift-excluder unexclude

- name: Install docker
  yum:
    name: docker
    state: present
  register: docker_install

- name: Configure docker-storage-setup configuration
  copy:
    content: |
      STORAGE_DRIVER=overlay2
      CONTAINER_ROOT_LV_NAME=dockerlv
      CONTAINER_ROOT_LV_SIZE=100%FREE
      CONTAINER_ROOT_LV_MOUNT_PATH=/var/lib/docker
      DEVS=/dev/vdb
      VG=docker-vg
      EXTRA_STORAGE_OPTIONS="--storage-opt overlay2.size=3G"
    dest: /etc/sysconfig/docker-storage-setup
  when: docker_install.changed

- name: Run docker-storage-setup
  command: docker-storage-setup
  when: docker_install.changed

- name: Start and enable docker
  systemd:
    name: docker
    enabled: yes
    state: started
  when: docker_install.changed

## If interim dns is installed, DNS nameserver should be updated
#- name: Check if iterim dns ip exist in /etc/resolv.conf
#  command: "grep {{hostvars['localhost']['ansible_controller_ip']}} /etc/resolv.conf"
#  register: interim_dns_ip_exist
#  ignore_errors: yes
#  when: interim_dns.install
#
#- name: Add interim dns ip to all nodes
#  lineinfile:
#    path: /etc/sysconfig/network-scripts/ifcfg-eth0
#    line: "PEERDNS=no"
#  with_items:
#    - "{{ interim_dns_ip_exist }}"
#  when: interim_dns.install and item.rc == 1
#
#- name: Add interim dns ip to all nodes
#  lineinfile:
#    path: /etc/sysconfig/network-scripts/ifcfg-eth0
#    line: "DNS1={{hostvars['localhost']['ansible_controller_ip']}}"
#  with_items:
#    - "{{ interim_dns_ip_exist }}"
#  when: interim_dns.install and item.rc == 1
#

#- name: Start NetworkManager and network
#  service:
#    name: "{{ item }}"
#    state: restarted
#    enabled: true
#  with_items:
#  - NetworkManager
#  - network

- name: Determine if firewalld is installed
  yum:
    name: "firewalld"
    state: present
  register: firewalld_installed

- name: Stop firewalld
  service:
    name: firewalld
    state: stopped
    enabled: false
  when:
  - firewalld_installed.installed_versions | default([]) | length > 0 

- name: Start iptables
  service:
    name: iptables
    state: started
    enabled: true
